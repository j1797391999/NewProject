
##keepalived主配置
! Configuration File for keepalived
global_defs {
	router_id LVS_MASTER
}

vrrp_script chk_haproxy {
	script "/etc/keepalived/haproxy_check.sh" ## 检测 haproxy 状态的脚本路径
	interval 2 ## 检测时间间隔
	weight 2 ## 如果条件成立，权重+2
}

vrrp_instance VI_1 {
	state MASTER
	interface ens33
	virtual_router_id 79
	priority 100
	advert_int 1
	nopreempt
	authentication {
		auth_type PASS
		auth_pass 1234
	}
	
	virtual_ipaddress {
		192.168.29.101
	}
	
	track_script {
		chk_haproxy
	}
}

# 写VIP virtual_server，只配置本地机器
virtual_server 192.168.29.101 3307 {# 定义虚拟服务器，地址与上面的virtual_ipaddress相同
	delay_loop 3 # 健康检查时间间隔，3秒
	lb_algo rr # 负载均衡调度算法：rr|wrr|lc|wlc|sh|dh|lblc
	lb_kind DR # 负载均衡转发规则：NAT|DR|TUN
	# persistence_timeout 5 # 会话保持时间5秒，动态服务建议开启
	protocol TCP # 转发协议protocol，一般有tcp和udp两种
	real_server 192.168.29.106 3307 {
		weight 1 # 权重越大负载分越大，0表示失效
		TCP_CHECK {
			connect_timeout 3
			nb_get_retry 3
			delay_before_retry 3
			connect_port 3306 
		} 
	} 
}


#keepalived从机配置

! Configuration File for keepalived
global_defs {
	router_id LVS_MASTER
}

vrrp_script chk_haproxy {
	script "/etc/keepalived/haproxy_check.sh" ## 检测 haproxy 状态的脚本路径
	interval 2 ## 检测时间间隔
	weight 2 ## 如果条件成立，权重+2
}

vrrp_instance VI_1 {
	state BACKUP
	interface ens33
	virtual_router_id 79
	priority 90
	advert_int 1
	nopreempt
	authentication {
		auth_type PASS
		auth_pass 1234
	}
	virtual_ipaddress {
		192.168.29.101
	}
	track_script {
		chk_haproxy
	}
}

# 写VIP virtual_server，只配置本地机器
virtual_server 192.168.29.101 3307 {# 定义虚拟服务器，地址与上面的virtual_ipaddress相同
	delay_loop 3 # 健康检查时间间隔，3秒
	lb_algo rr # 负载均衡调度算法：rr|wrr|lc|wlc|sh|dh|lblc
	lb_kind DR # 负载均衡转发规则：NAT|DR|TUN #
	persistence_timeout 5 # 会话保持时间5秒，动态服务建议开启
	protocol TCP # 转发协议protocol，一般有tcp和udp两种
	real_server 192.168.29.107 3307 {
		weight 1 # 权重越大负载分越大，0表示失效
		TCP_CHECK {
			connect_timeout 3
			nb_get_retry 3
			delay_before_retry 3
			connect_port 3306
		}
	}
}


#防火墙开启keepalived使用组播
firewall-cmd --direct --permanent --add-rule ipv4 filter INPUT 0 --in-interface ens33 --destination 224.0.0.18 --protocol vrrp -j ACCEPT
#刷新防火墙
[guansheng@lgs keepalived]$ firewall-cmd --reload;


#检测 haproxy 状态的脚本
#!/bin/bash
START_HAPROXY="/usr/sbin/haproxy -f /etc/haproxy/haproxy.cfg" #haproxy启动命令
LOG_FILE="/usr/local/keepalived/log/haproxy-check.log" # 日志文件
HAPS=`ps -C haproxy --no-header |wc -l` # 检测haproxy的状态，0代表未启动,1已经启动
date "+%Y-%m-%d %H:%M:%S" >> $LOG_FILE #在日志文件当中记录检测时间
echo "check haproxy status" >> $LOG_FILE # 记录haproxy的状态
if [ $HAPS -eq 0 ];then #执行haproxy判断
	echo $START_HAPROXY >> $LOG_FILE #记录启动命令
	/usr/sbin/haproxy -f /etc/haproxy/haproxy.cfg #启动haproxy
	sleep 3
	if [ `ps -C haproxy --no-header |wc -l` -eq 0 ];then
		echo "start haproxy failed, killall keepalived" >> $LOG_FILE
		killall keepalived
		service keepalived stop
	fi
fi

















